S->program id { variable_declaration stmts }
stmts->stmt ; stmts
stmts->epsilon
stmt->{ stmts }
stmt->while ( expr ) stmt
stmt->if ( expr ) stmt
stmt->if ( expr ) stmt else stmt
stmt->for ( id in num .. num ) stmt
stmt->id = expr
stmt->epsilon
variable_declaration -> type null_sign variables ; variable_declaration
variable_declaration -> epsilon
type -> int
type -> float
null_sign -> ?
null_sign -> epsilon
variables -> variable , variables
variables -> variable
variable -> id array
array -> [ factor ] array
array -> epsilon
expr->expr + expr
expr->expr - expr
expr->expr * expr
expr->expr / expr
expr->expr ^ factor
expr->factor
expr->expr < expr
expr->expr > expr
expr->expr != expr
expr->expr == expr
expr->expr <= expr
expr->expr >= expr
expr->expr += expr
expr->expr -= expr
expr->expr *= expr
expr->expr /= expr
expr->expr && expr
expr->expr || expr
factor->id
factor->num
factor->real
factor->( expr )